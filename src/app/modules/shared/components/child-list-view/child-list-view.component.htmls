<!-- START DESKTOP SIZE -->
<div *ngIf="listFiles.length > 0" class="data-table" class="large__size">
  <!--<table class="table table-hover">
     <thead>
      <tr>
        <th width="5%">
          <label class="custom-control custom-checkbox">
            <input #checkAll type="checkbox" class="custom-control-input" name="checkAll" (click)="handleCheckAll()">
            <span class="custom-control-indicator"></span>
          </label>
        </th>
        <th *ngFor="let column of columns" [width]="column.width" (click)="column.sort!==false ? sortColumnSelected(column) : ''">
          <span [innerHTML]="column.title | translate: params"></span>
          <ng-container>
            <i *ngIf="column.sort==='asc'" class="fal fa-sort-amount-up sort-icon float-right ico--custom"></i>
            <i *ngIf="column.sort==='desc'" class="fal fa-sort-amount-down sort-icon float-right ico--custom"></i>
          </ng-container>
        </th>
        <th width="22%" class="cursor-text">
          <span [innerHTML]="'TABLE.COLUMNS.ACTIONS' | translate: params"></span>
        </th>
      </tr>
    </thead> -->
  <!-- <tbody>
      <tr *ngFor="let r of listFiles; let index=index" (mouseover)="hoveredIndex=index" (mouseleave)="hoveredIndex=-1"
        class="item-row" [ngClass]="{'hl':index==hoveredIndex}">
        <td>
          <label class="custom-control custom-checkbox">
            <input type="checkbox" class="custom-control-input" (click)="handleChecked(r)" name="optionChecked"
              [checked]="r.isChecked">
            <span class="custom-control-indicator"></span>
          </label>
        </td>
        <td class="tb-name">
          <div class="vertical-items">
            ICON FOLDER
            <div *ngIf="r.type === 'dir'; else icon_file_content" class="icon-folder">
              <a *ngIf="rename != index" (click)="!isSingleClick && openFolder(r.name, r.type)">
                <i class="fas fa-folder fa-fw tb-row-folder"></i>
                <i class="fal fa-eye tb-row-folder-lock" *ngIf="r.encrypted || r.permission ==='r'"></i>
              </a>
            </div>
            ICON FILE
            <ng-template #icon_file_content>
              <div class="icon-folder center-img">
                <a *ngIf="rename != index" (click)="!isSingleClick && openFolder(r.name, r.type)">
                  <img *ngIf="r.thumbnail && !r.imgError" class="file-icon" [src]="r.thumbnail" (error)="setErrorImg(index)">
                  <img *ngIf="!r.thumbnail && !r.imgError" class="file-icon" [src]="r.name | customFileIcon" (error)="setErrorImg(index)">

                  <div *ngIf="(r.imgError && r.imgError===1 ) ">
                    <i class="{{ r.name | customFileIcon }}" id="icon--custom--listview"></i>
                  </div>
                </a>
                <i class="fal fa-eye tb-row-folder-lock" *ngIf="(r.encrypted || r.permission === 'r') && r.type === 'dir'"></i>
                <i class="fal fa-lock tb-row-folder-lock" *ngIf="r.is_locked && r.type === 'file'"></i>
              </div>
            </ng-template>
            <a *ngIf="rename != index" (click)="!isSingleClick && openFolder(r.name, r.type)" class="name" [ngClass]="{'name-starred': r.starred}"
              data-toggle="tooltip" data-title="{{r.name}}">{{r.name | splice_length: 65}} </a>
            <div *ngIf="rename == index" class="input-group">
              <div class=" tb-name-input form-group">
                <input #renameInput type="text" class="form-control" value={{r.name}} (keyup.esc)="rename = -1"
                  (keypress)="onKeyPress($event, r.type)" (keyup.enter)="changeName(r, $event, index)" (focusout)="rename = -1"
                  maxlength="255">
                <i class="form-group__bar"></i>
              </div>
              <button class="btn btn-success waves-effect" (mousedown)="triggerNameChange()">
                <i class="fal fa-check"></i>
              </button>
              <button class="btn btn-danger waves-effect" (click)="rename = -1">
                <i class="fal fa-times"></i>
              </button>
            </div>
          </div>
        </td>
        <td class="tb-name">
          <span [ngClass]="{'name-starred': r.starred}" data-toggle="tooltip" title="{{ r.mtime * 1000 | date: 'EEEE, d MMM yyyy - HH:mm:ss Z' }}">{{
            r.mtime * 1000 | date: 'dd.MM.yyyy - HH:mm:ss' }}</span>
        </td>
        <td class="tb-name">
          <div *ngIf=" r.type==='file'">
            <span [ngClass]=" {'name-starred':
              r.starred}">{{r.size | customFileSize}}</span>
          </div>
        </td>
        <td class="tb-name">
          <div class="vertical-items">
            <span data-toggle="tooltip" [title]="r.modifier_email" class="name" [ngClass]="{'name-starred': r.starred}">{{
              r.modifier_email }}</span>
          </div>
        </td>
        <td class="tb-name">
          <span [ngClass]="{'name-starred': r.starred}" *ngIf="r.permission === 'rw'" [innerHTML]="'PERMISSIONS.READ_WRITE' | translate: params"></span>
          <span [ngClass]="{'name-starred': r.starred}" *ngIf="r.permission === 'r'" [innerHTML]="'PERMISSIONS.READ' | translate: params"></span>
        </td>
        <td>
          <div class="tb-row-menu-name">
            <div *ngIf="index==hoveredIndex">
              <i class="actions__item fal fa-download green-color-hover" data-toggle="tooltip" [title]="'TOOLTIPS.DOWNLOAD' | translate: params"
                (click)="downloadItem(r)"></i>
              <i *ngIf="!repoEncrypted" class="actions__item fal fa-share-alt green-color-hover" data-target="#share-modal"
                (click)="shareFolder(r,index)" data-toggle="tooltip" [title]="'TOOLTIPS.SHARE' | translate: params"></i>
              <i *ngIf="r.permission==='rw'" class="actions__item fal fa-trash-alt green-color-hover" data-target="#delete-file-modal"
                data-toggle="tooltip" [title]="'TOOLTIPS.DELETE' | translate: params" (click)="removeFolder(r,index)"></i>

              <span class="icon-favorite" *ngIf="r.type === 'file'">
                <span *ngIf="r.starred" data-toggle="tooltip" [title]="'TOOLTIPS.UNFAVORITE' | translate: params">
                  <input type="checkbox" name="favorite" checked (click)="removeFileStarred(r.name, index)">
                </span>
                <span *ngIf="!r.starred" data-toggle="tooltip" [title]="'TOOLTIPS.FAVORITE' | translate: params">
                  <input type="checkbox" name="favorite" (click)="markFileStarred(r.name, index)">
                </span>
              </span>

              <div class="dropup actions__item">
                <span data-toggle="tooltip" [title]="'TOOLTIPS.MORE_OPERATIONS' | translate: params">
                  <i data-toggle="dropdown" class="actions__item fal fa-ellipsis-v green-color-hover"></i>
                  <div class="dropdown-menu dropdown-menu-right">
                    <a *ngIf="r.permission === 'rw'" class="dropdown-item" (click)="rename = index" (click)="clickOnNameChange(r)">
                      <span [innerHTML]="'BUTTONS.RENAME' | translate: params"></span>
                    </a>
                    <a *ngIf="r.permission === 'rw'" class="dropdown-item" (click)="moveFileFolder(r, index)">
                      <span [innerHTML]="'BUTTONS.MOVE' | translate: params"></span>
                    </a>
                    <a class="dropdown-item" *ngIf="r.type === 'file' && !r.is_locked" (click)="lockFile(r, index)">
                      <span [innerHTML]="'BUTTONS.LOCK' | translate: params"></span>
                    </a>
                    <a class="dropdown-item" *ngIf="r.type === 'file' && r.is_locked" (click)="unlockFile(r, index)">
                      <span [innerHTML]="'BUTTONS.UNLOCK' | translate: params"></span>
                    </a>
                    <a *ngIf="r.encrypted" class="dropdown-item">
                      <span [innerHTML]="'BUTTONS.CHANGE_PASSWORD' | translate: params"></span>
                    </a>
                    <a class="dropdown-item" (click)="copyFileFolder(r)">
                      <span [innerHTML]="'BUTTONS.COPY' | translate: params"></span>
                    </a>
                    <a *ngIf="r.permission === 'rw' && r.type === 'file'" class="dropdown-item" (click)="historyFile(r.name)">
                      <span [innerHTML]="'BUTTONS.HISTORY' | translate: params"></span>
                    </a>
                    <a class="dropdown-item" (click)="viewDetails(r)">
                      <span [innerHTML]="'BUTTONS.DETAILS' | translate: params"></span>
                    </a>
                  </div>
                </span>
              </div>
            </div>
          </div>
        </td>
      </tr>
    </tbody>
  </table> -->



  <table>
    <thead>
      <tr>
        <th>
          <label class="custom-control custom-checkbox">
            <input #checkAll type="checkbox" class="custom-control-input" name="checkAll" (click)="handleCheckAll()">
            <span class="custom-control-indicator"></span>
          </label>
        </th>
        <th *ngFor="let column of columns" [width]="column.width" (click)="column.sort!==false ? sortColumnSelected(column) : ''">
          <span [innerHTML]="column.title | translate: params"></span>
          <ng-container>
            <i *ngIf="column.sort==='asc'" class="fal fa-sort-amount-up sort-icon float-right ico--custom"></i>
            <i *ngIf="column.sort==='desc'" class="fal fa-sort-amount-down sort-icon float-right ico--custom"></i>
          </ng-container>
        </th>
        <th class="cursor-text">
          <span [innerHTML]="'TABLE.COLUMNS.ACTIONS' | translate: params"></span>
        </th>
      </tr>
    </thead>
    <tbody>
      <tr *ngFor="let r of listFiles; let index=index" (mouseover)="hoveredIndex=index" (mouseleave)="hoveredIndex=-1"
        class="item-row" [ngClass]="{'hl':index==hoveredIndex}">
        <td>
          <label class="custom-control custom-checkbox">
            <input type="checkbox" class="custom-control-input" (click)="handleChecked(r)" name="optionChecked"
              [checked]="r.isChecked">
            <span class="custom-control-indicator"></span>
          </label>
        </td>
        <td class="tb-name">
          <div class="vertical-items">
            <!-- ICON FOLDER -->
            <div *ngIf="r.type === 'dir'; else icon_file_content" class="icon-folder">
              <a *ngIf="rename != index" (click)="!isSingleClick && openFolder(r.name, r.type)">
                <i class="fas fa-folder fa-fw tb-row-folder"></i>
                <i class="fal fa-eye tb-row-folder-lock" *ngIf="r.encrypted || r.permission ==='r'"></i>
              </a>
            </div>
            <!-- ICON FILE -->
            <ng-template #icon_file_content>
              <div class="icon-folder center-img">
                <a *ngIf="rename != index" (click)="!isSingleClick && openFolder(r.name, r.type)">
                  <!-- <img *ngIf="r.thumbnail && !r.imgError" class="file-icon" [src]="r.thumbnail" (error)="setErrorImg(index)">
                  <img *ngIf="!r.thumbnail && !r.imgError" class="file-icon" [src]="r.name | customFileIcon" (error)="setErrorImg(index)"> -->

                  <img *ngIf="!r.imgError || (r.imgError && r.imgError !== 1 ) " (error)="setErrorImg(index)"
                    max-height="90px" src="{{ r.name | fileIconPath: false: repoId: parentPath + r.name: 50 }}" (error)="setErrorImg(index)">

                  <div *ngIf="(r.imgError && r.imgError===1 ) ">
                    <i class="{{ r.name | customFileIcon }}" id="icon--custom--listview"></i>
                  </div>
                </a>
                <i class="fal fa-eye tb-row-folder-lock" *ngIf="(r.encrypted || r.permission === 'r') && r.type === 'dir'"></i>
                <i class="fal fa-lock tb-row-folder-lock" *ngIf="r.is_locked && r.type === 'file'"></i>
              </div>
            </ng-template>
            <a *ngIf="rename != index" (click)="!isSingleClick && openFolder(r.name, r.type)" class="name" [ngClass]="{'name-starred': r.starred}"
              data-toggle="tooltip" data-title="{{r.name}}">{{r.name | splice_length: 65}} </a>
            <div *ngIf="rename == index" class="input-group">
              <div class=" tb-name-input form-group">
                <input #renameInput type="text" class="form-control" value={{r.name}} (keyup.esc)="rename = -1"
                  (keypress)="onKeyPress($event, r.type)" (keyup.enter)="changeName(r, $event, index)" (focusout)="rename = -1"
                  maxlength="255">
                <i class="form-group__bar"></i>
              </div>
              <button class="btn btn-success waves-effect" (mousedown)="triggerNameChange()">
                <i class="fal fa-check"></i>
              </button>
              <button class="btn btn-danger waves-effect" (click)="rename = -1">
                <i class="fal fa-times"></i>
              </button>
            </div>
          </div>
        </td>

        <td class="time">
          <span [ngClass]="{'name-starred': r.starred}" data-toggle="tooltip" title="{{ r.mtime * 1000 | date: 'EEEE, d MMM yyyy - HH:mm:ss Z' }}">{{
            r.mtime * 1000 | date: 'dd.MM.yyyy - HH:mm:ss' }}</span>
        </td>
        <td class="size">
          <div *ngIf=" r.type==='file'">
            <span [ngClass]=" {'name-starred':
                  r.starred}">{{r.size | customFileSize}}</span>
          </div>
        </td>
        <td class="email">
          <div class="vertical-items">
            <span data-toggle="tooltip" [title]="r.modifier_email" class="name" [ngClass]="{'name-starred': r.starred}">{{
              r.modifier_email }}</span>
          </div>
        </td>
        <td class="permission">
          <span [ngClass]="{'name-starred': r.starred}" *ngIf="r.permission === 'rw'" [innerHTML]="'PERMISSIONS.READ_WRITE' | translate: params"></span>
          <span [ngClass]="{'name-starred': r.starred}" *ngIf="r.permission === 'r'" [innerHTML]="'PERMISSIONS.READ' | translate: params"></span>
        </td>
        <td class="action">
          <div class="tb-row-menu-name">
            <!-- *ngIf="index==hoveredIndex" -->

            <div class="list__option__big__size">
              <i class="actions__item fal fa-download green-color-hover" data-toggle="tooltip" [title]="'TOOLTIPS.DOWNLOAD' | translate: params"
                (click)="downloadItem(r)"></i>
              <i *ngIf="!repoEncrypted && (r.type === 'dir' || (r.type === 'file' && currentUserPermission.can_generate_share_link !== false))"
                class="actions__item fal fa-share-alt green-color-hover" data-target="#share-modal" (click)="shareFolder(r,index)"
                data-toggle="tooltip" [title]="'TOOLTIPS.SHARE' | translate: params"></i>
              <i *ngIf="r.permission==='rw'" class="actions__item fal fa-trash-alt green-color-hover" data-target="#delete-file-modal"
                data-toggle="tooltip" [title]="'TOOLTIPS.DELETE' | translate: params" (click)="removeFolder(r,index)"></i>

              <span class="icon-favorite" *ngIf="r.type === 'file'" class="mark__un__fv">
                <span *ngIf="r.starred" data-toggle="tooltip" [title]="'TOOLTIPS.UNFAVORITE' | translate: params">
                  <input type="checkbox" name="favorite" checked (click)="removeFileStarred(r.name, index)">
                </span>
                <span *ngIf="!r.starred" data-toggle="tooltip" [title]="'TOOLTIPS.FAVORITE' | translate: params">
                  <input type="checkbox" name="favorite" (click)="markFileStarred(r.name, index)">
                </span>
              </span>

              <div class="dropup actions__item">
                <span data-toggle="tooltip" [title]="'TOOLTIPS.MORE_OPERATIONS' | translate: params">
                  <i data-toggle="dropdown" class="actions__item fal fa-ellipsis-v green-color-hover"></i>
                  <div class="dropdown-menu dropdown-menu-right">
                    <a *ngIf="r.permission === 'rw'" class="dropdown-item" (click)="rename = index" (click)="clickOnNameChange(r)">
                      <span [innerHTML]="'BUTTONS.RENAME' | translate: params"></span>
                    </a>
                    <a *ngIf="r.permission === 'rw'" class="dropdown-item" (click)="moveFileFolder(r, index)">
                      <span [innerHTML]="'BUTTONS.MOVE' | translate: params"></span>
                    </a>
                    <a class="dropdown-item" *ngIf="r.type === 'file' && !r.is_locked" (click)="lockFile(r, index)">
                      <span [innerHTML]="'BUTTONS.LOCK' | translate: params"></span>
                    </a>
                    <a class="dropdown-item" *ngIf="r.type === 'file' && r.is_locked" (click)="unlockFile(r, index)">
                      <span [innerHTML]="'BUTTONS.UNLOCK' | translate: params"></span>
                    </a>
                    <a *ngIf="r.encrypted" class="dropdown-item">
                      <span [innerHTML]="'BUTTONS.CHANGE_PASSWORD' | translate: params"></span>
                    </a>
                    <a class="dropdown-item" (click)="copyFileFolder(r)">
                      <span [innerHTML]="'BUTTONS.COPY' | translate: params"></span>
                    </a>
                    <a *ngIf="r.permission === 'rw' && r.type === 'file'" class="dropdown-item" (click)="historyFile(r.name)">
                      <span [innerHTML]="'BUTTONS.HISTORY' | translate: params"></span>
                    </a>
                    <a class="dropdown-item" (click)="viewDetails(r)">
                      <span [innerHTML]="'BUTTONS.DETAILS' | translate: params"></span>
                    </a>
                  </div>
                </span>
              </div>
            </div>
          </div>
        </td>
      </tr>
    </tbody>
  </table>
</div>
